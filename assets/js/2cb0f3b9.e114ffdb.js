"use strict";(self.webpackChunkh3_website=self.webpackChunkh3_website||[]).push([[9322],{5680:(e,a,n)=>{n.d(a,{xA:()=>s,yg:()=>p});var l=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,l)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function d(e,a){if(null==e)return{};var n,l,r=function(e,a){if(null==e)return{};var n,l,r={},t=Object.keys(e);for(l=0;l<t.length;l++)n=t[l],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(l=0;l<t.length;l++)n=t[l],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var g=l.createContext({}),o=function(e){var a=l.useContext(g),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},s=function(e){var a=o(e.components);return l.createElement(g.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},c=l.forwardRef((function(e,a){var n=e.components,r=e.mdxType,t=e.originalType,g=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),c=o(n),p=r,y=c["".concat(g,".").concat(p)]||c[p]||u[p]||t;return n?l.createElement(y,i(i({ref:a},s),{},{components:n})):l.createElement(y,i({ref:a},s))}));function p(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var t=n.length,i=new Array(t);i[0]=c;var d={};for(var g in a)hasOwnProperty.call(a,g)&&(d[g]=a[g]);d.originalType=e,d.mdxType="string"==typeof e?e:r,i[1]=d;for(var o=2;o<t;o++)i[o]=n[o];return l.createElement.apply(null,i)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9365:(e,a,n)=>{n.d(a,{A:()=>i});var l=n(6540),r=n(53);const t="tabItem_Ymn6";function i(e){let{children:a,hidden:n,className:i}=e;return l.createElement("div",{role:"tabpanel",className:(0,r.A)(t,i),hidden:n},a)}},1470:(e,a,n)=>{n.d(a,{A:()=>E});var l=n(8168),r=n(6540),t=n(53),i=n(3104),d=n(2681),g=n(7485),o=n(1682),s=n(9466);function u(e){return function(e){var a,n;return null!=(a=null==(n=r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?a:[]}(e).map((e=>{let{props:{value:a,label:n,attributes:l,default:r}}=e;return{value:a,label:n,attributes:l,default:r}}))}function c(e){const{values:a,children:n}=e;return(0,r.useMemo)((()=>{const e=null!=a?a:u(n);return function(e){const a=(0,o.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error('Docusaurus error: Duplicate values "'+a.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[a,n])}function p(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function y(e){let{queryString:a=!1,groupId:n}=e;const l=(0,d.W6)(),t=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,g.aZ)(t),(0,r.useCallback)((e=>{if(!t)return;const a=new URLSearchParams(l.location.search);a.set(t,e),l.replace({...l.location,search:a.toString()})}),[t,l])]}function m(e){const{defaultValue:a,queryString:n=!1,groupId:l}=e,t=c(e),[i,d]=(0,r.useState)((()=>function(e){var a;let{defaultValue:n,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+l.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const r=null!=(a=l.find((e=>e.default)))?a:l[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:t}))),[g,o]=y({queryString:n,groupId:l}),[u,m]=function(e){let{groupId:a}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(a),[l,t]=(0,s.Dv)(n);return[l,(0,r.useCallback)((e=>{n&&t.set(e)}),[n,t])]}({groupId:l}),f=(()=>{const e=null!=g?g:u;return p({value:e,tabValues:t})?e:null})();(0,r.useLayoutEffect)((()=>{f&&d(f)}),[f]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error("Can't select invalid tab value="+e);d(e),o(e),m(e)}),[o,m,t]),tabValues:t}}var f=n(2303);const h="tabList__CuJ",v="tabItem_LNqP";function b(e){let{className:a,block:n,selectedValue:d,selectValue:g,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:u}=(0,i.a_)(),c=e=>{const a=e.currentTarget,n=s.indexOf(a),l=o[n].value;l!==d&&(u(a),g(l))},p=e=>{var a;let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var l;const a=s.indexOf(e.currentTarget)+1;n=null!=(l=s[a])?l:s[0];break}case"ArrowLeft":{var r;const a=s.indexOf(e.currentTarget)-1;n=null!=(r=s[a])?r:s[s.length-1];break}}null==(a=n)||a.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},a)},o.map((e=>{let{value:a,label:n,attributes:i}=e;return r.createElement("li",(0,l.A)({role:"tab",tabIndex:d===a?0:-1,"aria-selected":d===a,key:a,ref:e=>s.push(e),onKeyDown:p,onClick:c},i,{className:(0,t.A)("tabs__item",v,null==i?void 0:i.className,{"tabs__item--active":d===a})}),null!=n?n:a)})))}function T(e){let{lazy:a,children:n,selectedValue:l}=e;const t=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){const e=t.find((e=>e.props.value===l));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,r.cloneElement)(e,{key:a,hidden:e.props.value!==l}))))}function N(e){const a=m(e);return r.createElement("div",{className:(0,t.A)("tabs-container",h)},r.createElement(b,(0,l.A)({},e,a)),r.createElement(T,(0,l.A)({},e,a)))}function E(e){const a=(0,f.A)();return r.createElement(N,(0,l.A)({key:String(a)},e))}},7120:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>g,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>u});var l=n(8168),r=(n(6540),n(5680)),t=n(1470),i=n(9365);const d={id:"uniedge",title:"Directed edge functions",sidebar_label:"Directed edges",slug:"/api/uniedge"},g=void 0,o={unversionedId:"api/uniedge",id:"api/uniedge",title:"Directed edge functions",description:"Directed edges allow encoding the directed (that is, which cell is the origin and which is the destination can be determined)",source:"@site/docs/api/directededge.mdx",sourceDirName:"api",slug:"/api/uniedge",permalink:"/docs/api/uniedge",draft:!1,editUrl:"https://github.com/uber/h3/edit/master/website/docs/api/directededge.mdx",tags:[],version:"current",frontMatter:{id:"uniedge",title:"Directed edge functions",sidebar_label:"Directed edges",slug:"/api/uniedge"},sidebar:"someSidebar",previous:{title:"Regions",permalink:"/docs/api/regions"},next:{title:"Vertexes",permalink:"/docs/api/vertex"}},s={},u=[{value:"areNeighborCells",id:"areneighborcells",level:2},{value:"cellsToDirectedEdge",id:"cellstodirectededge",level:2},{value:"isValidDirectedEdge",id:"isvaliddirectededge",level:2},{value:"getDirectedEdgeOrigin",id:"getdirectededgeorigin",level:2},{value:"getDirectedEdgeDestination",id:"getdirectededgedestination",level:2},{value:"directedEdgeToCells",id:"directededgetocells",level:2},{value:"originToDirectedEdges",id:"origintodirectededges",level:2},{value:"directedEdgeToBoundary",id:"directededgetoboundary",level:2}],c={toc:u};function p(e){let{components:a,...n}=e;return(0,r.yg)("wrapper",(0,l.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Directed edges allow encoding the directed (that is, which cell is the origin and which is the destination can be determined)\nedge from one cell to a neighboring cell."),(0,r.yg)("h2",{id:"areneighborcells"},"areNeighborCells"),(0,r.yg)("p",null,"Determines whether or not the provided H3 cells are neighbors."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"H3Error areNeighborCells(H3Index origin, H3Index destination, int *out);\n")),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"out")," will be 1 if the indexes are neighbors, 0 otherwise."),(0,r.yg)("p",null,"Returns 0 (",(0,r.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"boolean areNeighborCells(long origin, long destination);\nboolean areNeighborCells(String origin, String destination);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.areNeighborCells(origin, destination)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const origin = '85283473fffffff';\n  const destination = '85283477fffffff';\n  return h3.areNeighborCells(origin, destination);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.are_neighbor_cells(origin, destination)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"origin.IsNeighbor(destination)\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3_are_neighbor_cells(origin, destination)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 areNeighborCells --help\nh3: Determines if the provided H3 cells are neighbors (have a shared border)\nH3 4.1.0\n\n    areNeighborCells    Determines if the provided H3 cells are neighbors (have a shared border)\n    -o, --origin <CELL> Required. Origin H3 Cell\n    -d, --destination <CELL>    Required. Destination H3 Cell\n    -h, --help  Show this help message.\n    -f, --format <FMT>  'json' for true or false, 'numeric' for 1 or 0 (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 areNeighborCells -o 85283473fffffff -d 85283477fffffff\ntrue\n")))),(0,r.yg)("h2",{id:"cellstodirectededge"},"cellsToDirectedEdge"),(0,r.yg)("p",null,"Provides a directed edge H3 index based on the provided origin and\ndestination."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"H3Error cellsToDirectedEdge(H3Index origin, H3Index destination, H3Index *out);\n")),(0,r.yg)("p",null,"Returns 0 (",(0,r.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"long cellsToDirectedEdge(long origin, long destination);\nString cellsToDirectedEdge(String origin, String destination);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.cellsToDirectedEdge(h3Index)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const origin = '85283473fffffff';\n  const destination = '85283477fffffff';\n  return h3.cellsToDirectedEdge(origin, destination);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.cells_to_directed_edge(origin, destination)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"origin.DirectedEdge(destination)\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3_cells_to_directed_edge(origin, destination)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 cellsToDirectedEdge --help\nh3: Converts neighboring cells into a directed edge index (or errors if they are not neighbors)\nH3 4.1.0\n\n    cellsToDirectedEdge Converts neighboring cells into a directed edge index (or errors if they are not neighbors)\n    -o, --origin <CELL> Required. Origin H3 Cell\n    -d, --destination <CELL>    Required. Destination H3 Cell\n    -h, --help  Show this help message.\n    -f, --format <FMT>  'json' for \"CELL\"\\n, 'newline' for CELL\\n (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 cellsToDirectedEdge -o 85283473fffffff -d 85283477fffffff\n"115283473fffffff"\n')))),(0,r.yg)("h2",{id:"isvaliddirectededge"},"isValidDirectedEdge"),(0,r.yg)("p",null,"Determines if the provided H3Index is a valid unidirectional edge index."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"int isValidDirectedEdge(H3Index edge);\n")),(0,r.yg)("p",null,"Returns ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," if it is a unidirectional edge H3Index, otherwise ",(0,r.yg)("inlineCode",{parentName:"p"},"0"),".")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"boolean isValidDirectedEdge(long edge);\nboolean isValidDirectedEdge(String edgeAddress);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.isValidDirectedEdge(edge)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const edge = '115283473fffffff';\n  return h3.isValidDirectedEdge(edge);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.is_valid_directed_edge(edge)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"edge.IsValid()\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3_is_valid_directed_edge(edge)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 isValidDirectedEdge --help\nh3: Checks if the provided H3 directed edge is actually valid\nH3 4.1.0\n\n    isValidDirectedEdge Checks if the provided H3 directed edge is actually valid\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -f, --format <FMT>  'json' for true or false, 'numeric' for 1 or 0 (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 isValidDirectedEdge -c 115283473fffffff\ntrue\n")))),(0,r.yg)("h2",{id:"getdirectededgeorigin"},"getDirectedEdgeOrigin"),(0,r.yg)("p",null,"Provides the origin hexagon from the directed edge H3Index."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"H3Error getDirectedEdgeOrigin(H3Index edge, H3Index *out);\n")),(0,r.yg)("p",null,"Returns 0 (",(0,r.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"long getDirectedEdgeOrigin(long edge);\nString getDirectedEdgeOrigin(String edgeAddress);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.getDirectedEdgeOrigin(h3Index)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const edge = '115283473fffffff';\n  return h3.getDirectedEdgeOrigin(edge);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.get_directed_edge_origin(edge)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"edge.Origin()\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3_get_directed_edge_origin(edge)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 getDirectedEdgeOrigin --help\nh3: Returns the origin cell from the directed edge\nH3 4.1.0\n\n    getDirectedEdgeOrigin   Returns the origin cell from the directed edge\n    -c, --cell <index>  Required. H3 Cell\n    -h, --help  Show this help message.\n    -f, --format <FMT>  'json' for \"CELL\"\\n, 'newline' for CELL\\n (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 getDirectedEdgeOrigin -c 115283473fffffff\n"85283473fffffff"\n')))),(0,r.yg)("h2",{id:"getdirectededgedestination"},"getDirectedEdgeDestination"),(0,r.yg)("p",null,"Provides the destination hexagon from the directed edge H3Index."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"H3Error getDirectedEdgeDestination(H3Index edge, H3Index *out);\n")),(0,r.yg)("p",null,"Returns 0 (",(0,r.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"long getDirectedEdgeDestination(long edge);\nString getDirectedEdgeDestination(String edgeAddress);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.getDirectedEdgeDestination(edge)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const edge = '115283473fffffff';\n  return h3.getDirectedEdgeDestination(edge);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.get_directed_edge_destination(edge)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"edge.Destination()\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3.get_directed_edge_destination(edge)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 getDirectedEdgeDestination --help\nh3: Returns the destination cell from the directed edge\nH3 4.1.0\n\n    getDirectedEdgeDestination  Returns the destination cell from the directed edge\n    -c, --cell <index>  Required. H3 Cell\n    -h, --help  Show this help message.\n    -f, --format <FMT>  'json' for \"CELL\"\\n, 'newline' for CELL\\n (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 getDirectedEdgeDestination -c 115283473fffffff\n"85283477fffffff"\n')))),(0,r.yg)("h2",{id:"directededgetocells"},"directedEdgeToCells"),(0,r.yg)("p",null,"Provides the origin-destination pair of cells for the given directed edge."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"H3Error directedEdgeToCells(H3Index edge, H3Index* originDestination);\n")),(0,r.yg)("p",null,"The origin and destination are placed at\n",(0,r.yg)("inlineCode",{parentName:"p"},"originDestination[0]")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"originDestination[1]"),", respectively."),(0,r.yg)("p",null,"Returns 0 (",(0,r.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"List<Long> directedEdgeToCells(long edge);\nList<String> directedEdgeToCells(String edgeAddress);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.directedEdgeToCells(edge)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const edge = '115283473fffffff';\n  return h3.directedEdgeToCells(edge);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.directed_edge_to_cells(edge)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"edge.Cells()\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3_directed_edge_to_cells(edge)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 directedEdgeToCells --help\nh3: Returns the origin, destination pair of cells from the directed edge\nH3 4.1.0\n\n    directedEdgeToCells Returns the origin, destination pair of cells from the directed edge\n    -c, --cell <index>  Required. H3 Cell\n    -h, --help  Show this help message.\n    -f, --format <FMT>  'json' for [\"CELL\", ...], 'newline' for CELL\\n... (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 directedEdgeToCells -c 115283473fffffff\n["85283473fffffff", "85283477fffffff"]\n')))),(0,r.yg)("h2",{id:"origintodirectededges"},"originToDirectedEdges"),(0,r.yg)("p",null,"Provides all of the directed edges from the current cell."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"H3Error originToDirectedEdges(H3Index origin, H3Index* edges);\n")),(0,r.yg)("p",null,(0,r.yg)("inlineCode",{parentName:"p"},"edges")," must be of length 6,\nand the number of directed edges placed in the array may be less than 6.\nIf this is the case, one of the members of the array will be ",(0,r.yg)("inlineCode",{parentName:"p"},"0"),"."),(0,r.yg)("p",null,"Returns 0 (",(0,r.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"List<Long> originToDirectedEdges(long h3);\nList<String> originToDirectedEdges(String h3);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.originToDirectedEdges(h3Index)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  return h3.originToDirectedEdges(h);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.origin_to_directed_edges(h)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"origin.DirectedEdges()\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3_origin_to_directed_edges(h)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 originToDirectedEdges --help\nh3: Returns all of the directed edges from the specified origin cell\nH3 4.1.0\n\n    originToDirectedEdges   Returns all of the directed edges from the specified origin cell\n    -c, --cell <index>  Required. H3 Cell\n    -h, --help  Show this help message.\n    -f, --format <FMT>  'json' for [\"CELL\", ...], 'newline' for CELL\\n... (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 originToDirectedEdges -c 85283473fffffff\n["115283473fffffff", "125283473fffffff", "135283473fffffff", "145283473fffffff", "155283473fffffff", "165283473fffffff"]\n')))),(0,r.yg)("h2",{id:"directededgetoboundary"},"directedEdgeToBoundary"),(0,r.yg)("p",null,"Provides the geographic lat/lng coordinates defining the directed edge.\nNote that this may be more than two points for complex edges."),(0,r.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,r.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-c"},"H3Error directedEdgeToBoundary(H3Index edge, CellBoundary* gb);\n")),(0,r.yg)("p",null,"Returns 0 (",(0,r.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,r.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-java"},"List<LatLng> directedEdgeToBoundary(long edge);\nList<LatLng> directedEdgeToBoundary(String edgeAddress);\n"))),(0,r.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js"},"h3.directedEdgeToBoundary(edge, [formatAsGeoJson])\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const edge = '115283473fffffff';\n  return h3.directedEdgeToBoundary(edge);\n}\n"))),(0,r.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-py"},"h3.directed_edge_to_boundary(edge)\n"))),(0,r.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-go"},"edge.Boundary()\n"))),(0,r.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sql"},"h3_directed_edge_to_boundary(edge)\n"))),(0,r.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 directedEdgeToBoundary --help\nh3: Provides the coordinates defining the directed edge\nH3 4.1.0\n\n    directedEdgeToBoundary  Provides the coordinates defining the directed edge\n    -c, --cell <index>  Required. H3 Cell\n    -h, --help  Show this help message.\n    -f, --format <FMT>  'json' for [[lat, lng], ...], 'wkt' for a WKT POLYGON, 'newline' for lat\\nlng\\n... (Default: json)\n")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 directedEdgeToBoundary -c 115283473fffffff\n[[37.4201286777, -122.0377349643], [37.3375560844, -122.0904289290]]\n")))))}p.isMDXComponent=!0}}]);