"use strict";(self.webpackChunkh3_website=self.webpackChunkh3_website||[]).push([[4423],{5680:(e,a,n)=>{n.d(a,{xA:()=>g,yg:()=>d});var l=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function r(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,l)}return n}function s(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?r(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function o(e,a){if(null==e)return{};var n,l,t=function(e,a){if(null==e)return{};var n,l,t={},r=Object.keys(e);for(l=0;l<r.length;l++)n=r[l],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(l=0;l<r.length;l++)n=r[l],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var u=l.createContext({}),i=function(e){var a=l.useContext(u),n=a;return e&&(n="function"==typeof e?e(a):s(s({},a),e)),n},g=function(e){var a=i(e.components);return l.createElement(u.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},c=l.forwardRef((function(e,a){var n=e.components,t=e.mdxType,r=e.originalType,u=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),c=i(n),d=t,m=c["".concat(u,".").concat(d)]||c[d]||p[d]||r;return n?l.createElement(m,s(s({ref:a},g),{},{components:n})):l.createElement(m,s({ref:a},g))}));function d(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=n.length,s=new Array(r);s[0]=c;var o={};for(var u in a)hasOwnProperty.call(a,u)&&(o[u]=a[u]);o.originalType=e,o.mdxType="string"==typeof e?e:t,s[1]=o;for(var i=2;i<r;i++)s[i]=n[i];return l.createElement.apply(null,s)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9365:(e,a,n)=>{n.d(a,{A:()=>s});var l=n(6540),t=n(53);const r="tabItem_Ymn6";function s(e){let{children:a,hidden:n,className:s}=e;return l.createElement("div",{role:"tabpanel",className:(0,t.A)(r,s),hidden:n},a)}},1470:(e,a,n)=>{n.d(a,{A:()=>N});var l=n(8168),t=n(6540),r=n(53),s=n(3104),o=n(2681),u=n(7485),i=n(1682),g=n(9466);function p(e){return function(e){var a,n;return null!=(a=null==(n=t.Children.map(e,(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?a:[]}(e).map((e=>{let{props:{value:a,label:n,attributes:l,default:t}}=e;return{value:a,label:n,attributes:l,default:t}}))}function c(e){const{values:a,children:n}=e;return(0,t.useMemo)((()=>{const e=null!=a?a:p(n);return function(e){const a=(0,i.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error('Docusaurus error: Duplicate values "'+a.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[a,n])}function d(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function m(e){let{queryString:a=!1,groupId:n}=e;const l=(0,o.W6)(),r=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,u.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const a=new URLSearchParams(l.location.search);a.set(r,e),l.replace({...l.location,search:a.toString()})}),[r,l])]}function y(e){const{defaultValue:a,queryString:n=!1,groupId:l}=e,r=c(e),[s,o]=(0,t.useState)((()=>function(e){var a;let{defaultValue:n,tabValues:l}=e;if(0===l.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:l}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+l.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const t=null!=(a=l.find((e=>e.default)))?a:l[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:a,tabValues:r}))),[u,i]=m({queryString:n,groupId:l}),[p,y]=function(e){let{groupId:a}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(a),[l,r]=(0,g.Dv)(n);return[l,(0,t.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:l}),h=(()=>{const e=null!=u?u:p;return d({value:e,tabValues:r})?e:null})();(0,t.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:s,selectValue:(0,t.useCallback)((e=>{if(!d({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);o(e),i(e),y(e)}),[i,y,r]),tabValues:r}}var h=n(2303);const v="tabList__CuJ",f="tabItem_LNqP";function b(e){let{className:a,block:n,selectedValue:o,selectValue:u,tabValues:i}=e;const g=[],{blockElementScrollPositionUntilNextRender:p}=(0,s.a_)(),c=e=>{const a=e.currentTarget,n=g.indexOf(a),l=i[n].value;l!==o&&(p(a),u(l))},d=e=>{var a;let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var l;const a=g.indexOf(e.currentTarget)+1;n=null!=(l=g[a])?l:g[0];break}case"ArrowLeft":{var t;const a=g.indexOf(e.currentTarget)-1;n=null!=(t=g[a])?t:g[g.length-1];break}}null==(a=n)||a.focus()};return t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":n},a)},i.map((e=>{let{value:a,label:n,attributes:s}=e;return t.createElement("li",(0,l.A)({role:"tab",tabIndex:o===a?0:-1,"aria-selected":o===a,key:a,ref:e=>g.push(e),onKeyDown:d,onClick:c},s,{className:(0,r.A)("tabs__item",f,null==s?void 0:s.className,{"tabs__item--active":o===a})}),null!=n?n:a)})))}function T(e){let{lazy:a,children:n,selectedValue:l}=e;const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){const e=r.find((e=>e.props.value===l));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return t.createElement("div",{className:"margin-top--md"},r.map(((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==l}))))}function x(e){const a=y(e);return t.createElement("div",{className:(0,r.A)("tabs-container",v)},t.createElement(b,(0,l.A)({},e,a)),t.createElement(T,(0,l.A)({},e,a)))}function N(e){const a=(0,h.A)();return t.createElement(x,(0,l.A)({key:String(a)},e))}},653:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>g,contentTitle:()=>u,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var l=n(8168),t=(n(6540),n(5680)),r=n(1470),s=n(9365);const o={id:"inspection",title:"Index inspection functions",sidebar_label:"Inspection",slug:"/api/inspection"},u=void 0,i={unversionedId:"api/inspection",id:"api/inspection",title:"Index inspection functions",description:"These functions provide metadata about an H3 index, such as its resolution or base cell, and provide utilities for converting into and out of the 64-bit representation of an H3 index.",source:"@site/docs/api/inspection.mdx",sourceDirName:"api",slug:"/api/inspection",permalink:"/docs/api/inspection",draft:!1,editUrl:"https://github.com/uber/h3/edit/master/website/docs/api/inspection.mdx",tags:[],version:"current",frontMatter:{id:"inspection",title:"Index inspection functions",sidebar_label:"Inspection",slug:"/api/inspection"},sidebar:"someSidebar",previous:{title:"Indexing",permalink:"/docs/api/indexing"},next:{title:"Traversal",permalink:"/docs/api/traversal"}},g={},p=[{value:"getResolution",id:"getresolution",level:2},{value:"getBaseCellNumber",id:"getbasecellnumber",level:2},{value:"getIndexDigit",id:"getindexdigit",level:2},{value:"stringToH3",id:"stringtoh3",level:2},{value:"h3ToString",id:"h3tostring",level:2},{value:"isValidCell",id:"isvalidcell",level:2},{value:"isResClassIII",id:"isresclassiii",level:2},{value:"isPentagon",id:"ispentagon",level:2},{value:"getIcosahedronFaces",id:"geticosahedronfaces",level:2},{value:"maxFaceCount",id:"maxfacecount",level:2}],c={toc:p};function d(e){let{components:a,...n}=e;return(0,t.yg)("wrapper",(0,l.A)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"These functions provide metadata about an H3 index, such as its resolution or base cell, and provide utilities for converting into and out of the 64-bit representation of an H3 index."),(0,t.yg)("h2",{id:"getresolution"},"getResolution"),(0,t.yg)("p",null,"Returns the resolution of the index.\n(Works for cells, edges, and vertexes.)"),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"int getResolution(H3Index h);\n"))),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"int getResolution(long h3);\nint getResolution(String h3Address);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"h3.getResolution(h)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  return h3.getResolution(h);\n}\n"))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.get_resolution(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.Resolution()\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_get_resolution(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 getResolution --help\nh3: Extracts the resolution (0 - 15) from the H3 cell\nH3 4.1.0\n\n    getResolution   Extracts the resolution (0 - 15) from the H3 cell\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 getResolution -c 85283473fffffff\n5\n")))),(0,t.yg)("h2",{id:"getbasecellnumber"},"getBaseCellNumber"),(0,t.yg)("p",null,"Returns the base cell number of the index.\n(Works for cells, edges, and vertexes.)"),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"int getBaseCellNumber(H3Index h);\n"))),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"int getBaseCellNumber(long h3);\nint getBaseCellNumber(String h3Address);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"h3.getBaseCellNumber(h)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  return h3.getBaseCellNumber(h);\n}\n"))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.get_base_cell_number(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.BaseCellNumber()\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_get_base_cell_number(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 getBaseCellNumber --help\nh3: Extracts the base cell number (0 - 121) from the H3 cell\nH3 4.1.0\n\n    getBaseCellNumber   Extracts the base cell number (0 - 121) from the H3 cell\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 getBaseCellNumber -c 85283473fffffff\n20\n")))),(0,t.yg)("h2",{id:"getindexdigit"},"getIndexDigit"),(0,t.yg)("p",null,"Returns an ",(0,t.yg)("a",{parentName:"p",href:"https://h3geo.org/docs/library/index/cell"},"indexing digit")," of the index.\nWorks for cells, edges and vertexes."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"H3Error getIndexDigit(H3Index h, int res, H3Index *out);\n"))),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"int getIndexDigit(long h3, int res);\nint getIndexDigit(String h3Address, int res);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"h3.getIndexDigit(h, res)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  const res = 2;\n  return h3.getIndexDigit(h, res);\n}\n"))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.get_index_digit(h, res)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.IndexDigit(res)\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_get_index_digit(h, res)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 getIndexDigit --help\nh3: Extracts the indexing digit (0 - 7) from the H3 cell\nH3 4.3.0\n\n    getIndexDigit   Extracts the indexing digit (0 - 7) from the H3 cell\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -r, --res <res> Required. Indexing resolution (1 - 15)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 getIndexDigit -c 85283473fffffff -r 2\n7\n")))),(0,t.yg)("p",null,"Digits are 1-indexed starting with the resolution 1 digit."),(0,t.yg)("p",null,"This function will return unused index digits as well as used ones,\nin that case they will be 7 for valid cells."),(0,t.yg)("h2",{id:"stringtoh3"},"stringToH3"),(0,t.yg)("p",null,"Converts the string representation to ",(0,t.yg)("inlineCode",{parentName:"p"},"H3Index")," (",(0,t.yg)("inlineCode",{parentName:"p"},"uint64_t"),") representation."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"H3Error stringToH3(const char *str, H3Index *out);\n")),(0,t.yg)("p",null,"Returns 0 (",(0,t.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"long stringToH3(String h3Address);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"The H3 JavaScript binding supports only the string representation of an H3 index."))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.str_to_int(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"h3.IndexFromString(str)\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_string_to_h3(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"The H3 CLI supports only the string representation of an H3 index.")))),(0,t.yg)("h2",{id:"h3tostring"},"h3ToString"),(0,t.yg)("p",null,"Converts the ",(0,t.yg)("inlineCode",{parentName:"p"},"H3Index")," representation of the index to the string representation."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"H3Error h3ToString(H3Index h, char *str, size_t sz);\n")),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"str")," must be at least of length 17.\nReturns 0 (",(0,t.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"String h3ToString(long h3);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"The H3 JavaScript binding supports only the string representation of an H3 index."))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.int_to_str(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.String()\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_h3_to_string(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"The H3 CLI supports only the string representation of an H3 index.")))),(0,t.yg)("h2",{id:"isvalidcell"},"isValidCell"),(0,t.yg)("p",null,"Returns non-zero if this is a valid H3 cell index."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"int isValidCell(H3Index h);\n"))),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"boolean isValidCell(long h3);\nboolean isValidCell(String h3Address);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"h3.isValidCell(h)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  return h3.isValidCell(h);\n}\n"))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.is_valid_cell(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.IsValid()\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_is_valid_cell(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 isValidCell --help\nh3: Checks if the provided H3 index is actually valid\nH3 4.1.0\n\n    isValidCell Checks if the provided H3 index is actually valid\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -f, --format <FMT>  'json' for true or false, 'numeric' for 1 or 0 (Default: json)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 isValidCell -c 85283473fffffff\ntrue\n")))),(0,t.yg)("h2",{id:"isresclassiii"},"isResClassIII"),(0,t.yg)("p",null,"Returns non-zero if this index has a resolution with Class III orientation."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"int isResClassIII(H3Index h);\n"))),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"boolean isResClassIII(long h3);\nboolean isResClassIII(String h3Address);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"h3.isResClassIII(h)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  return h3.isResClassIII(h);\n}\n"))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.is_res_class_III(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.IsResClassIII()\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_is_res_class_iii(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 isResClassIII --help\nh3: Checks if the provided H3 index has a Class III orientation\nH3 4.1.0\n\n    isResClassIII   Checks if the provided H3 index has a Class III orientation\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -f, --format <FMT>  'json' for true or false, 'numeric' for 1 or 0 (Default: json)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 isResClassIII -c 85283473fffffff\ntrue\n")))),(0,t.yg)("h2",{id:"ispentagon"},"isPentagon"),(0,t.yg)("p",null,"Returns non-zero if this index represents a pentagonal cell."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"int isPentagon(H3Index h);\n"))),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"boolean isPentagon(long h3);\nboolean isPentagon(String h3Address);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"h3.isPentagon(h)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  return h3.isPentagon(h);\n}\n"))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.is_pentagon(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.IsPentagon()\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_is_pentagon(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 isPentagon --help\nh3: Checks if the provided H3 index is a pentagon instead of a hexagon\nH3 4.1.0\n\n    isPentagon  Checks if the provided H3 index is a pentagon instead of a hexagon\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -f, --format <FMT>  'json' for true or false, 'numeric' for 1 or 0 (Default: json)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 isPentagon -c 85283473fffffff\nfalse\n")))),(0,t.yg)("h2",{id:"geticosahedronfaces"},"getIcosahedronFaces"),(0,t.yg)("p",null,"Find all icosahedron faces intersected by a given H3 cell.\nFaces are represented as integers from 0-19, inclusive."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"H3Error getIcosahedronFaces(H3Index h, int* out);\n")),(0,t.yg)("p",null,"Face values are placed in the array ",(0,t.yg)("inlineCode",{parentName:"p"},"out"),".\n",(0,t.yg)("inlineCode",{parentName:"p"},"out")," must be at least length of ",(0,t.yg)("inlineCode",{parentName:"p"},"maxFaceCount(h)"),".\nThe array is sparse, and empty (no intersection) array values are represented by -1."),(0,t.yg)("p",null,"Returns 0 (",(0,t.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-java"},"Collection<Integer> getIcosahedronFaces(long h3);\nCollection<Integer> getIcosahedronFaces(String h3Address);\n"))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js"},"h3.getIcosahedronFaces(h)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  return h3.getIcosahedronFaces(h);\n}\n"))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-py"},"h3.get_icosahedron_faces(h)\n"))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-go"},"cell.IcosahedronFaces()\n"))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sql"},"h3_get_icosahedron_faces(h)\n"))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 getIcosahedronFaces --help\nh3: Returns the icosahedron face numbers (0 - 19) that the H3 index intersects\nH3 4.1.0\n\n    getIcosahedronFaces Returns the icosahedron face numbers (0 - 19) that the H3 index intersects\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -f, --format <FMT>  'json' for [faceNum, ...], 'newline' for faceNum\\n... (Default: json)\n")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 getIcosahedronFaces -c 85283473fffffff\n[7]\n")))),(0,t.yg)("h2",{id:"maxfacecount"},"maxFaceCount"),(0,t.yg)("p",null,"Returns the maximum number of icosahedron faces the given H3 index may intersect."),(0,t.yg)(r.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,t.yg)(s.A,{value:"c",mdxType:"TabItem"},(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-c"},"H3Error maxFaceCount(H3Index h3, int *out);\n")),(0,t.yg)("p",null,"Returns 0 (",(0,t.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,t.yg)(s.A,{value:"java",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,t.yg)(s.A,{value:"javascript",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,t.yg)(s.A,{value:"python",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,t.yg)(s.A,{value:"go",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,t.yg)(s.A,{value:"duckdb",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,t.yg)(s.A,{value:"shell",mdxType:"TabItem"},(0,t.yg)("admonition",{type:"note"},(0,t.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed.")))))}d.isMDXComponent=!0}}]);