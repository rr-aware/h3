"use strict";(self.webpackChunkh3_website=self.webpackChunkh3_website||[]).push([[3282],{5680:(e,a,n)=>{n.d(a,{xA:()=>g,yg:()=>p});var f=n(6540);function l(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function t(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var f=Object.getOwnPropertySymbols(e);a&&(f=f.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,f)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?t(Object(n),!0).forEach((function(a){l(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function r(e,a){if(null==e)return{};var n,f,l=function(e,a){if(null==e)return{};var n,f,l={},t=Object.keys(e);for(f=0;f<t.length;f++)n=t[f],a.indexOf(n)>=0||(l[n]=e[n]);return l}(e,a);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);for(f=0;f<t.length;f++)n=t[f],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=f.createContext({}),s=function(e){var a=f.useContext(o),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},g=function(e){var a=s(e.components);return f.createElement(o.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return f.createElement(f.Fragment,{},a)}},u=f.forwardRef((function(e,a){var n=e.components,l=e.mdxType,t=e.originalType,o=e.parentName,g=r(e,["components","mdxType","originalType","parentName"]),u=s(n),p=l,c=u["".concat(o,".").concat(p)]||u[p]||d[p]||t;return n?f.createElement(c,i(i({ref:a},g),{},{components:n})):f.createElement(c,i({ref:a},g))}));function p(e,a){var n=arguments,l=a&&a.mdxType;if("string"==typeof e||l){var t=n.length,i=new Array(t);i[0]=u;var r={};for(var o in a)hasOwnProperty.call(a,o)&&(r[o]=a[o]);r.originalType=e,r.mdxType="string"==typeof e?e:l,i[1]=r;for(var s=2;s<t;s++)i[s]=n[s];return f.createElement.apply(null,i)}return f.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9365:(e,a,n)=>{n.d(a,{A:()=>i});var f=n(6540),l=n(53);const t="tabItem_Ymn6";function i(e){let{children:a,hidden:n,className:i}=e;return f.createElement("div",{role:"tabpanel",className:(0,l.A)(t,i),hidden:n},a)}},1470:(e,a,n)=>{n.d(a,{A:()=>N});var f=n(8168),l=n(6540),t=n(53),i=n(3104),r=n(2681),o=n(7485),s=n(1682),g=n(9466);function d(e){return function(e){var a,n;return null!=(a=null==(n=l.Children.map(e,(e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:a}=e;return!!a&&"object"==typeof a&&"value"in a}(e))return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})))?void 0:n.filter(Boolean))?a:[]}(e).map((e=>{let{props:{value:a,label:n,attributes:f,default:l}}=e;return{value:a,label:n,attributes:f,default:l}}))}function u(e){const{values:a,children:n}=e;return(0,l.useMemo)((()=>{const e=null!=a?a:d(n);return function(e){const a=(0,s.X)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error('Docusaurus error: Duplicate values "'+a.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[a,n])}function p(e){let{value:a,tabValues:n}=e;return n.some((e=>e.value===a))}function c(e){let{queryString:a=!1,groupId:n}=e;const f=(0,r.W6)(),t=function(e){let{queryString:a=!1,groupId:n}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:a,groupId:n});return[(0,o.aZ)(t),(0,l.useCallback)((e=>{if(!t)return;const a=new URLSearchParams(f.location.search);a.set(t,e),f.replace({...f.location,search:a.toString()})}),[t,f])]}function m(e){const{defaultValue:a,queryString:n=!1,groupId:f}=e,t=u(e),[i,r]=(0,l.useState)((()=>function(e){var a;let{defaultValue:n,tabValues:f}=e;if(0===f.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:f}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+f.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const l=null!=(a=f.find((e=>e.default)))?a:f[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:a,tabValues:t}))),[o,s]=c({queryString:n,groupId:f}),[d,m]=function(e){let{groupId:a}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(a),[f,t]=(0,g.Dv)(n);return[f,(0,l.useCallback)((e=>{n&&t.set(e)}),[n,t])]}({groupId:f}),y=(()=>{const e=null!=o?o:d;return p({value:e,tabValues:t})?e:null})();(0,l.useLayoutEffect)((()=>{y&&r(y)}),[y]);return{selectedValue:i,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:t}))throw new Error("Can't select invalid tab value="+e);r(e),s(e),m(e)}),[s,m,t]),tabValues:t}}var y=n(2303);const h="tabList__CuJ",v="tabItem_LNqP";function b(e){let{className:a,block:n,selectedValue:r,selectValue:o,tabValues:s}=e;const g=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.a_)(),u=e=>{const a=e.currentTarget,n=g.indexOf(a),f=s[n].value;f!==r&&(d(a),o(f))},p=e=>{var a;let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{var f;const a=g.indexOf(e.currentTarget)+1;n=null!=(f=g[a])?f:g[0];break}case"ArrowLeft":{var l;const a=g.indexOf(e.currentTarget)-1;n=null!=(l=g[a])?l:g[g.length-1];break}}null==(a=n)||a.focus()};return l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},a)},s.map((e=>{let{value:a,label:n,attributes:i}=e;return l.createElement("li",(0,f.A)({role:"tab",tabIndex:r===a?0:-1,"aria-selected":r===a,key:a,ref:e=>g.push(e),onKeyDown:p,onClick:u},i,{className:(0,t.A)("tabs__item",v,null==i?void 0:i.className,{"tabs__item--active":r===a})}),null!=n?n:a)})))}function T(e){let{lazy:a,children:n,selectedValue:f}=e;const t=(Array.isArray(n)?n:[n]).filter(Boolean);if(a){const e=t.find((e=>e.props.value===f));return e?(0,l.cloneElement)(e,{className:"margin-top--md"}):null}return l.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==f}))))}function x(e){const a=m(e);return l.createElement("div",{className:(0,t.A)("tabs-container",h)},l.createElement(b,(0,f.A)({},e,a)),l.createElement(T,(0,f.A)({},e,a)))}function N(e){const a=(0,y.A)();return l.createElement(x,(0,f.A)({key:String(a)},e))}},8381:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>g,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var f=n(8168),l=(n(6540),n(5680)),t=n(1470),i=n(9365);const r={id:"traversal",title:"Grid traversal functions",sidebar_label:"Traversal",slug:"/api/traversal"},o=void 0,s={unversionedId:"api/traversal",id:"api/traversal",title:"Grid traversal functions",description:"Grid traversal allows finding cells in the vicinity of an origin cell,",source:"@site/docs/api/traversal.mdx",sourceDirName:"api",slug:"/api/traversal",permalink:"/docs/api/traversal",draft:!1,editUrl:"https://github.com/uber/h3/edit/master/website/docs/api/traversal.mdx",tags:[],version:"current",frontMatter:{id:"traversal",title:"Grid traversal functions",sidebar_label:"Traversal",slug:"/api/traversal"},sidebar:"someSidebar",previous:{title:"Inspection",permalink:"/docs/api/inspection"},next:{title:"Hierarchy",permalink:"/docs/api/hierarchy"}},g={},d=[{value:"gridDistance",id:"griddistance",level:2},{value:"gridRing",id:"gridring",level:2},{value:"gridRingUnsafe",id:"gridringunsafe",level:2},{value:"maxGridRingSize",id:"maxgridringsize",level:2},{value:"gridDisk",id:"griddisk",level:2},{value:"maxGridDiskSize",id:"maxgriddisksize",level:2},{value:"gridDiskDistances",id:"griddiskdistances",level:2},{value:"gridDiskUnsafe",id:"griddiskunsafe",level:2},{value:"gridDiskDistancesUnsafe",id:"griddiskdistancesunsafe",level:2},{value:"gridDiskDistancesSafe",id:"griddiskdistancessafe",level:2},{value:"gridDisksUnsafe",id:"griddisksunsafe",level:2},{value:"gridPathCells",id:"gridpathcells",level:2},{value:"gridPathCellsSize",id:"gridpathcellssize",level:2},{value:"cellToLocalIj",id:"celltolocalij",level:2},{value:"localIjToCell",id:"localijtocell",level:2}],u={toc:d};function p(e){let{components:a,...n}=e;return(0,l.yg)("wrapper",(0,f.A)({},u,n,{components:a,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"Grid traversal allows finding cells in the vicinity of an origin cell,\nand determining how to traverse the grid from one cell to another."),(0,l.yg)("h2",{id:"griddistance"},"gridDistance"),(0,l.yg)("p",null,"Provides the ",(0,l.yg)("em",{parentName:"p"},"grid distance"),' between two cells, which is\ndefined as the minimum number of "hops" needed across adjacent cells to get\nfrom one cell to the other.'),(0,l.yg)("p",null,"Note that finding the grid distance may fail for a few reasons:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"the cells are not comparable (different resolutions),"),(0,l.yg)("li",{parentName:"ul"},"the cells are too far apart, or"),(0,l.yg)("li",{parentName:"ul"},"the cells are separated by pentagonal distortion.")),(0,l.yg)("p",null,"This is the same set of limitations as the local IJ coordinate space functions."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridDistance(H3Index origin, H3Index h3, int64_t *distance);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success, or an error if finding the distance failed.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"long gridDistance(long a, long b) throws DistanceUndefinedException;\nlong gridDistance(String a, String b) throws DistanceUndefinedException;\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.gridDistance(a, b)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const start = '85283473fffffff';\n  const end = '8528342bfffffff';\n  return h3.gridDistance(start, end);\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},"h3.grid_distance(h1, h2)\n"))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"cell.GridDistance(other)\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_distance(h1, h2)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 gridDistance --help\nh3: Returns the number of steps along the grid to move from the origin cell to the destination cell\nH3 4.1.0\n\n  gridDistance  Returns the number of steps along the grid to move from the origin cell to the destination cell\n  -h, --help  Show this help message.\n  -o, --origin <cell> Required. The origin H3 cell\n  -d, --destination <cell>  Required. The destination H3 cell\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 gridDistance -o 85283473fffffff -d 8528342bfffffff\n2\n")))),(0,l.yg)("h2",{id:"gridring"},"gridRing"),(0,l.yg)("p",null,'Produces the "hollow ring" of cells which are ',(0,l.yg)("em",{parentName:"p"},"exactly")," grid distance ",(0,l.yg)("inlineCode",{parentName:"p"},"k"),"\nfrom the origin cell."),(0,l.yg)("p",null,"If pentagon distortion is encountered, this function will use a more memory-intensive\napproach than ",(0,l.yg)("inlineCode",{parentName:"p"},"gridRingUnsafe")," in order to compute the ring."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridRing(H3Index origin, int k, H3Index* out);\n")),(0,l.yg)("p",null,"The caller should allocate memory for the maximum size of the ring, which is\ngiven by ",(0,l.yg)("inlineCode",{parentName:"p"},"maxGridRingSize"),". If fewer than the maximum number of cells are\ngenerated, elements in ",(0,l.yg)("inlineCode",{parentName:"p"},"out")," may be left zero."),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"List<Long> gridRing(long h3, int k);\nList<String> gridRing(String h3Address, int k);\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.gridRing(h3Index, k)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  const k = 1;\n  return h3.gridRing(h, k);\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},"h3.grid_ring(h, k)\n"))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"cell.GridRing(k)\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_ring(h, k)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 gridRing --help\nh3: Returns an array of H3 cells, each cell 'k' steps away from the origin cell\nH3 4.1.0\n\n  gridRing  Returns an array of H3 cells, each cell 'k' steps away from the origin cell\n  -h, --help  Show this help message.\n  -c, --cell <index>  Required. H3 Cell\n  -k <distance> Required. Maximum grid distance for the output set\n  -f, --format <FMT>  'json' for [\"CELL\", ...], 'newline' for CELL\\n... (Default: json)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 gridRing -k 1 -c 85283473fffffff\n[ "8528340bfffffff", "85283447fffffff", "8528347bfffffff", "85283463fffffff", "85283477fffffff", "8528340ffffffff" ]\n')))),(0,l.yg)("h2",{id:"gridringunsafe"},"gridRingUnsafe"),(0,l.yg)("p",null,'Produces the "hollow ring" of cells which are ',(0,l.yg)("em",{parentName:"p"},"exactly")," grid distance ",(0,l.yg)("inlineCode",{parentName:"p"},"k"),"\nfrom the origin cell."),(0,l.yg)("p",null,"This function may fail if pentagonal distortion is encountered."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridRingUnsafe(H3Index origin, int k, H3Index* out);\n")),(0,l.yg)("p",null,"The caller should allocate memory for the maximum size of the ring, which is\ngiven by ",(0,l.yg)("inlineCode",{parentName:"p"},"maxGridRingSize"),"."),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") if no pentagonal distortion was encountered.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"List<Long> gridRingUnsafe(long h3, int k) throws PentagonEncounteredException;\nList<String> gridRingUnsafe(String h3Address, int k) throws PentagonEncounteredException;\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.gridRingUnsafe(h3Index, k)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  const k = 1;\n  return h3.gridRingUnsafe(h, k);\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"cell.GridRingUnsafe(k)\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_ring_unsafe(h, k)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed.")))),(0,l.yg)("h2",{id:"maxgridringsize"},"maxGridRingSize"),(0,l.yg)("p",null,"This function provides the maximum number of cells in the grid that are ",(0,l.yg)("em",{parentName:"p"},"exactly"),"\ngrid distance ",(0,l.yg)("inlineCode",{parentName:"p"},"k")," away from an origin, which is ",(0,l.yg)("inlineCode",{parentName:"p"},"6*k")," if ",(0,l.yg)("inlineCode",{parentName:"p"},"k > 0")," and ",(0,l.yg)("inlineCode",{parentName:"p"},"1")," if ",(0,l.yg)("inlineCode",{parentName:"p"},"k == 0"),"."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error maxGridRingSize(int k, int64_t* out);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") if no pentagonal distortion was encountered.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed.")))),(0,l.yg)("h2",{id:"griddisk"},"gridDisk"),(0,l.yg)("p",null,'Produces the "filled-in disk" of cells which are ',(0,l.yg)("em",{parentName:"p"},"at most")," grid distance ",(0,l.yg)("inlineCode",{parentName:"p"},"k"),"\nfrom the origin cell."),(0,l.yg)("p",null,"Output order is not guaranteed."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridDisk(H3Index origin, int k, H3Index* out);\n")),(0,l.yg)("p",null,"Elements of the output array may be left as zero,\nwhich can happen when crossing a pentagon."),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"List<Long> gridDisk(long origin, int k);\nList<String> gridDisk(String origin, int k);\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.gridDisk(origin, k)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  const k = 5;\n  return h3.gridDisk(h, k);\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},"h3.grid_disk(origin, k)\n"))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"cell.GridDisk(k)\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_disk(origin, k)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 gridDisk --help\nh3: Returns an array of a H3 cells within 'k' steps of the origin cell\nH3 4.1.0\n\n    gridDisk    Returns an array of a H3 cells within 'k' steps of the origin cell\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -k <distance>   Required. Maximum grid distance for the output set\n    -f, --format <FMT>  'json' for [\"CELL\", ...], 'newline' for CELL\\n... (Default: json)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 gridDisk -k 5 -c 85283473fffffff\n[ "85283473fffffff", "85283447fffffff", "8528347bfffffff", "85283463fffffff", "85283477fffffff", "8528340ffffffff", "8528340bfffffff", "85283457fffffff", "85283443fffffff", "8528344ffffffff", "852836b7fffffff", "8528346bfffffff", "8528346ffffffff", "85283467fffffff", "8528342bfffffff", "8528343bfffffff", "85283407fffffff", "85283403fffffff", "8528341bfffffff", "852834cffffffff", "85283453fffffff", "8528345bfffffff", "8528344bfffffff", "852836b3fffffff", "852836a3fffffff", "852836a7fffffff", "852830d3fffffff", "852830d7fffffff", "8528309bfffffff", "85283093fffffff", "8528342ffffffff", "85283423fffffff", "85283433fffffff", "852834abfffffff", "85283417fffffff", "85283413fffffff", "852834c7fffffff", "852834c3fffffff", "852834cbfffffff", "8529a927fffffff", "8529a92ffffffff", "85283697fffffff", "85283687fffffff", "852836bbfffffff", "852836abfffffff", "852836affffffff", "852830dbfffffff", "852830c3fffffff", "852830c7fffffff", "8528308bfffffff", "85283083fffffff", "85283097fffffff", "8528355bfffffff", "85283427fffffff", "85283437fffffff", "852834affffffff", "852834a3fffffff", "852834bbfffffff", "8528348ffffffff", "8528348bfffffff", "852834d7fffffff", "852834d3fffffff", "852834dbfffffff", "8529a937fffffff", "8529a923fffffff", "8529a92bfffffff", "85283693fffffff", "85283683fffffff", "8528368ffffffff", "85283617fffffff", "85283607fffffff", "85283633fffffff", "85283637fffffff", "852830cbfffffff", "852830cffffffff", "8528301bfffffff", "85283013fffffff", "8528308ffffffff", "85283087fffffff", "8528354bfffffff", "85283543fffffff", "85283553fffffff", "852835cbfffffff", "852835dbfffffff", "852834a7fffffff", "852834b7fffffff", "852834b3fffffff", "85283487fffffff", "85283483fffffff", "8528349bfffffff", "85291a6ffffffff" ]\n')))),(0,l.yg)("h2",{id:"maxgriddisksize"},"maxGridDiskSize"),(0,l.yg)("p",null,"Maximum number of cells that can result from the ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDisk")," function for a given ",(0,l.yg)("inlineCode",{parentName:"p"},"k"),"."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error maxGridDiskSize(int k, int64_t *out);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed.")))),(0,l.yg)("h2",{id:"griddiskdistances"},"gridDiskDistances"),(0,l.yg)("p",null,"Produces the same set of cells as ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDisk"),", but along with each cell's\ngrid distance from the origin cell."),(0,l.yg)("p",null,"Output order is not guaranteed."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridDiskDistances(H3Index origin, int k, H3Index* out, int* distances);\n")),(0,l.yg)("p",null,"Elements of the output array may be left as zero,\nwhich can happen when crossing a pentagon."),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"List<List<Long>> gridDiskDistances(long origin, int k);\nList<List<String>> gridDiskDistances(String origin, int k);\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.gridDiskDistances(origin, k)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  const k = 5;\n  return h3.gridDiskDistances(h, k);\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed in Python."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"cell.GridDiskDistances(k)\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_disk_distances(origin, k)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 gridDiskDistances --help\nh3: Returns an array of arrays of H3 cells, each array containing cells 'k' steps away from the origin cell, based on the outer array index\nH3 4.1.0\n\n    gridDiskDistances   Returns an array of arrays of H3 cells, each array containing cells 'k' steps away from the origin cell, based on the outer array index\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -k <distance>   Required. Maximum grid distance for the output set\n    -f, --format <FMT>  'json' for [[\"CELL\", ...], ...], 'newline' for CELL\\n with an extra newline between rings (Default: json)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 gridDiskDistances -k 5 -c 85283473fffffff\n[["85283473fffffff"], ["85283447fffffff", "8528347bfffffff", "85283463fffffff", "85283477fffffff", "8528340ffffffff", "8528340bfffffff"], ["85283457fffffff", "85283443fffffff", "8528344ffffffff", "852836b7fffffff", "8528346bfffffff", "8528346ffffffff", "85283467fffffff", "8528342bfffffff", "8528343bfffffff", "85283407fffffff", "85283403fffffff", "8528341bfffffff"], ["852834cffffffff", "85283453fffffff", "8528345bfffffff", "8528344bfffffff", "852836b3fffffff", "852836a3fffffff", "852836a7fffffff", "852830d3fffffff", "852830d7fffffff", "8528309bfffffff", "85283093fffffff", "8528342ffffffff", "85283423fffffff", "85283433fffffff", "852834abfffffff", "85283417fffffff", "85283413fffffff", "852834c7fffffff"], ["852834c3fffffff", "852834cbfffffff", "8529a927fffffff", "8529a92ffffffff", "85283697fffffff", "85283687fffffff", "852836bbfffffff", "852836abfffffff", "852836affffffff", "852830dbfffffff", "852830c3fffffff", "852830c7fffffff", "8528308bfffffff", "85283083fffffff", "85283097fffffff", "8528355bfffffff", "85283427fffffff", "85283437fffffff", "852834affffffff", "852834a3fffffff", "852834bbfffffff", "8528348ffffffff", "8528348bfffffff", "852834d7fffffff"], ["852834d3fffffff", "852834dbfffffff", "8529a937fffffff", "8529a923fffffff", "8529a92bfffffff", "85283693fffffff", "85283683fffffff", "8528368ffffffff", "85283617fffffff", "85283607fffffff", "85283633fffffff", "85283637fffffff", "852830cbfffffff", "852830cffffffff", "8528301bfffffff", "85283013fffffff", "8528308ffffffff", "85283087fffffff", "8528354bfffffff", "85283543fffffff", "85283553fffffff", "852835cbfffffff", "852835dbfffffff", "852834a7fffffff", "852834b7fffffff", "852834b3fffffff", "85283487fffffff", "85283483fffffff", "8528349bfffffff", "85291a6ffffffff"]]\n')))),(0,l.yg)("h2",{id:"griddiskunsafe"},"gridDiskUnsafe"),(0,l.yg)("p",null,"Produces cells within grid distance ",(0,l.yg)("inlineCode",{parentName:"p"},"k")," of the origin cell, just like ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDisk"),".\nHowever, the function may return an error code if pentagonal distorition is\nencountered. In this case, the output in the ",(0,l.yg)("inlineCode",{parentName:"p"},"out")," array is undefined."),(0,l.yg)("p",null,"Users can fall back to calling the slower but more robust ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDiskDistances"),"."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridDiskUnsafe(H3Index origin, int k, H3Index* out);\n")),(0,l.yg)("p",null,"Output is placed in the provided array in order of increasing distance from\nthe origin.\nThe provided array must be of size ",(0,l.yg)("inlineCode",{parentName:"p"},"maxGridDiskSize(k)"),"."),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") if no pentagonal distortion is encountered.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"List<List<Long>> gridDiskUnsafe(Long h3, int k) throws PentagonEncounteredException;\nList<List<String>> gridDiskUnsafe(String h3Address, int k) throws PentagonEncounteredException;\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_disk_unsafe(origin, k)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed.")))),(0,l.yg)("h2",{id:"griddiskdistancesunsafe"},"gridDiskDistancesUnsafe"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"gridDiskDistancesUnsafe")," produces indexes within ",(0,l.yg)("inlineCode",{parentName:"p"},"k")," distance of the origin index.\nOutput behavior is undefined when one of the indexes returned by this\nfunction is a pentagon or is in the pentagon distortion area."),(0,l.yg)("p",null,"Output is placed in the provided array in order of increasing distance from\nthe origin. The distances in hexagons is placed in the distances array at\nthe same offset. The provided array must be of size ",(0,l.yg)("inlineCode",{parentName:"p"},"maxGridDiskSize(k)"),"."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridDiskDistancesUnsafe(H3Index origin, int k, H3Index* out, int* distances);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") if no pentagonal distortion is encountered.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed because the same functionality is exposed by ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDiskUnsafe")))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_disk_distances_unsafe(origin, k)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed.")))),(0,l.yg)("h2",{id:"griddiskdistancessafe"},"gridDiskDistancesSafe"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"gridDiskDistancesSafe")," produces indexes within ",(0,l.yg)("inlineCode",{parentName:"p"},"k")," distance of the origin index."),(0,l.yg)("p",null,"Output is placed in the provided array in order of increasing distance from\nthe origin. The distances in hexagons is placed in the distances array at\nthe same offset. The provided array must be of size ",(0,l.yg)("inlineCode",{parentName:"p"},"maxGridDiskSize(k)"),"."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridDiskDistancesSafe(H3Index origin, int k, H3Index* out, int* distances);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed because the same functionality is exposed by ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDiskSafe")))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_disk_distances_safe(origin, k)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed.")))),(0,l.yg)("h2",{id:"griddisksunsafe"},"gridDisksUnsafe"),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"gridDisksUnsafe")," takes an array of input cells and a max ",(0,l.yg)("inlineCode",{parentName:"p"},"k")," and returns an\narray of cells sorted first by the original cell indices and then by the\ngrid ring (0 to max), with no guaranteed sorting within each grid ring group."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridDisksUnsafe(H3Index* h3Set, int length, int k, H3Index* out);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") if no pentagonal distortion was encountered.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed because the same functionality is exposed by ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDiskUnsafe")))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed."))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function is not exposed.")))),(0,l.yg)("h2",{id:"gridpathcells"},"gridPathCells"),(0,l.yg)("p",null,"Given two H3 cells, return a minimal-length contiguous path of cells\nbetween them (inclusive of the endpoint cells)."),(0,l.yg)("p",null,"This function may fail if the cells are very far apart, or if\nthe cells are on opposite sides of a pentagon."),(0,l.yg)("p",null,"Notes:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"The output of this function should not be considered stable\nacross library versions. The only guarantees are\nthat the path length will be ",(0,l.yg)("inlineCode",{parentName:"p"},"gridDistance(start, end) + 1")," and that\nevery cell in the path will be a neighbor of the preceding cell.")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("p",{parentName:"li"},"Paths exist in the H3 grid of cells, and may not align closely with either\nCartesian lines or great arcs."))),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridPathCells(H3Index start, H3Index end, H3Index* out);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") if no pentagonal distortion was encountered.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"List<Long> gridPathCells(long start, long end) throws LineUndefinedException\nList<String> gridPathCells(String startAddress, String endAddress) throws LineUndefinedException\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.gridPathCells(start, end)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const start = '85283473fffffff';\n  const end = '8528342bfffffff';\n  return h3.gridPathCells(start, end);\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},"h3.grid_path_cells(start, end)\n"))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"cell.GridPath(other)\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_grid_path_cells(start, end)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 gridPathCells --help\nh3: Returns an array of H3 cells from the origin cell to the destination cell (inclusive)\nH3 4.1.0\n\n    gridPathCells   Returns an array of H3 cells from the origin cell to the destination cell (inclusive)\n    -h, --help  Show this help message.\n    -o, --origin <cell> Required. The origin H3 cell\n    -d, --destination <cell>    Required. The destination H3 cell\n    -f, --format <FMT>  'json' for [\"CELL\", ...], 'newline' for CELL\\n... (Default: json)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 gridPathCells -o 85283473fffffff -d 8528342bfffffff\n[ "85283473fffffff", "85283477fffffff", "8528342bfffffff" ]\n')))),(0,l.yg)("h2",{id:"gridpathcellssize"},"gridPathCellsSize"),(0,l.yg)("p",null,"Number of cells in a grid path from the start cell to the end cell,\nto be used for allocating memory."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error gridPathCellsSize(H3Index start, H3Index end, int64_t* size);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success, or an error if the path cannot be computed.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed."))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("admonition",{type:"note"},(0,l.yg)("p",{parentName:"admonition"},"This function exists for memory management and is not exposed.")))),(0,l.yg)("h2",{id:"celltolocalij"},"cellToLocalIj"),(0,l.yg)("p",null,"Produces local IJ coordinates for an H3 cell anchored by an origin."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"mode")," is reserved for future expansion and must be set to ",(0,l.yg)("inlineCode",{parentName:"p"},"0"),"."),(0,l.yg)("p",null,"This function's output is not guaranteed to be compatible across different\nversions of H3."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error cellToLocalIj(H3Index origin, H3Index h3, uint32_t mode, CoordIJ *out);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"CoordIJ cellToLocalIj(long origin, long h3) throws PentagonEncounteredException, LocalIjUndefinedException;\nCoordIJ cellToLocalIj(String originAddress, String h3Address) throws PentagonEncounteredException, LocalIjUndefinedException;\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.cellToLocalIj(origin, h3)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const origin = '85283473fffffff';\n  const h = '8528342bfffffff';\n  const {i, j} = h3.cellToLocalIj(origin, h);\n  return [i, j];\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},"h3.cell_to_local_ij(origin, h)\n"))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"h3.CellToLocalIJ(origin, h)\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_cell_to_local_ij(origin, h)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 cellToLocalIj --help\nh3: Returns the IJ coordinate for a cell anchored to an origin cell\nH3 4.1.0\n\n    cellToLocalIj   Returns the IJ coordinate for a cell anchored to an origin cell\n    -h, --help  Show this help message.\n    -c, --cell <index>  Required. H3 Cell\n    -o, --origin <cell> Required. The origin H3 cell\n    -f, --format <FMT>  'json' for [I, J], 'newline' for I\\nJ\\n (Default: json)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},"$ h3 cellToLocalIj -o 85283473fffffff -c 8528342bfffffff\n[25, 13]\n")))),(0,l.yg)("h2",{id:"localijtocell"},"localIjToCell"),(0,l.yg)("p",null,"Produces an H3 cell from local IJ coordinates anchored by an origin."),(0,l.yg)("p",null,(0,l.yg)("inlineCode",{parentName:"p"},"mode")," is reserved for future expansion and must be set to ",(0,l.yg)("inlineCode",{parentName:"p"},"0"),"."),(0,l.yg)("p",null,"This function's output is not guaranteed to be compatible across different\nversions of H3."),(0,l.yg)(t.A,{groupId:"language",defaultValue:"c",values:[{label:"C",value:"c"},{label:"Java",value:"java"},{label:"JavaScript (Live)",value:"javascript"},{label:"Python",value:"python"},{label:"Go",value:"go"},{label:"DuckDB",value:"duckdb"},{label:"Shell",value:"shell"}],mdxType:"Tabs"},(0,l.yg)(i.A,{value:"c",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-c"},"H3Error localIjToCell(H3Index origin, const CoordIJ *ij, uint32_t mode, H3Index *out);\n")),(0,l.yg)("p",null,"Returns 0 (",(0,l.yg)("inlineCode",{parentName:"p"},"E_SUCCESS"),") on success.")),(0,l.yg)(i.A,{value:"java",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-java"},"long localIjToCell(long origin, CoordIJ ij) throws LocalIjUndefinedException;\nString localIjToCell(String originAddress, CoordIJ ij) throws LocalIjUndefinedException;\n"))),(0,l.yg)(i.A,{value:"javascript",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"h3.localIjToCell(origin, coords)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js",metastring:"live",live:!0},"function example() {\n  const h = '85283473fffffff';\n  const coords = {i: 0, j: 0};\n  return h3.localIjToCell(h, coords);\n}\n"))),(0,l.yg)(i.A,{value:"python",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-py"},"h3.local_ij_to_cell(origin, i, j)\n"))),(0,l.yg)(i.A,{value:"go",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-go"},"h3.LocalIJToCell(origin, CoordIJ{i, j})\n"))),(0,l.yg)(i.A,{value:"duckdb",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sql"},"h3_local_ij_to_cell(origin, i, j)\n"))),(0,l.yg)(i.A,{value:"shell",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-sh"},"$ h3 localIjToCell --help\nh3: Returns the H3 index from a local IJ coordinate anchored to an origin cell\nH3 4.1.0\n\n    localIjToCell   Returns the H3 index from a local IJ coordinate anchored to an origin cell\n    -h, --help  Show this help message.\n    -o, --origin <cell> Required. The origin H3 cell\n    -i <i>  Required. The I dimension of the IJ coordinate\n    -j <j>  Required. The J dimension of the IJ coordinate\n    -f, --format <FMT>  'json' for \"CELL\"\\n, 'newline' for CELL\\n (Default: json)\n")),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-bash"},'$ h3 localIjToCell -o 85283473fffffff -i 0 -j 0\n"85280003fffffff"\n')))))}p.isMDXComponent=!0}}]);